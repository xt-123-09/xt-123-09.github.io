<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo安装流程</title>
    <url>/2013/07/13/hello-world/</url>
    <content><![CDATA[<h1 id="第一篇hexo博客"><a href="#第一篇hexo博客" class="headerlink" title="第一篇hexo博客"></a>第一篇hexo博客</h1><h2 id="关于hexo的github托管"><a href="#关于hexo的github托管" class="headerlink" title="关于hexo的github托管"></a>关于hexo的github托管</h2><p>在github上创建仓库 需要与账号同名 即账号.github.io</p>
<p>git提交到远程github 按照github仓库的命令提示一步一步来 这里注意必须是github原网站 那些镜像站会有各种问题</p>
<p>获取github ssh密钥  并填setting写密钥</p>
<p>然后修改_config.yml文件 修改deploy</p>
<p>然后git中执行 hexo d -g 提交到github</p>
<p>然后访问 账号.github.io 即可看到博客</p>
<p>修改博客 执行 hexo g -d 提交到github</p>
<p>访问 账号.github.io 即可看到修改后的博客</p>
<!-- 用.md文档写段前端代码 -->

<pre>
<root>
    <!-- // 这里写代码 -->
    console.log("hello world，学习md写文档")
</root>
</pre>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>前端工具篇</title>
    <url>/2013/07/13/uniapp/</url>
    <content><![CDATA[<h1 id="前端工具篇"><a href="#前端工具篇" class="headerlink" title="前端工具篇"></a>前端工具篇</h1><blockquote>
<p>在线工具</p>
</blockquote>
<p><a href="https://tool.lu/">在线工具</a></p>
<!-- ![1](https://mmbiz.qpic.cn/mmbiz_png/dK7orxYickAliaThbMiaaeuiakx0iayzf7ya3VKTpwLum5P75WPthLXrwWib5cbXH5DZ00j8gubzClBYSqln3r3hJ5Og/640?wx_fmt=png&from=appmsg&random=0.007861578669613456&random=0.3141226120884222&random=0.7428574733115232&random=0.4611047489904452&random=0.4758495282094277&random=0.4832126686454079&random=0.6300475253118121&random=0.31807640006262883&random=0.680036275847175&random=0.3239205778442231&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1) -->

<h2 id="程序员工具箱"><a href="#程序员工具箱" class="headerlink" title="程序员工具箱"></a>程序员工具箱</h2><blockquote>
<p>程序员工具箱</p>
</blockquote>
<p><a href="http://tool.pfan.cn/apitest" title="程序员工具箱">程序员工具箱</a></p>
<h2 id="配色"><a href="#配色" class="headerlink" title="配色"></a>配色</h2><blockquote>
<p>配色</p>
</blockquote>
<p><a href="https://webkul.github.io/coolhue/" title="配色">配色</a></p>
<h2 id="菜鸟工具"><a href="#菜鸟工具" class="headerlink" title="菜鸟工具"></a>菜鸟工具</h2><blockquote>
<p>菜鸟工具</p>
</blockquote>
<p><a href="https://carbon.now.sh/?bg=rgba" title="菜鸟工具">菜鸟工具</a></p>
<h2 id="代码美化截图"><a href="#代码美化截图" class="headerlink" title="代码美化截图"></a>代码美化截图</h2><blockquote>
<p>代码美化截图</p>
</blockquote>
<p><a href="https://carbon.now.sh/?bg=rgba" title="代码美化截图">代码美化截图</a></p>
<h2 id="文件格式转换"><a href="#文件格式转换" class="headerlink" title="文件格式转换"></a>文件格式转换</h2><blockquote>
<p>文件格式转换</p>
</blockquote>
<p><a href="https://onlineconvertfree.com/zh/convert/" title="文件格式转换">文件格式转换</a></p>
<h2 id="vue-element-admin"><a href="#vue-element-admin" class="headerlink" title="vue-element-admin"></a>vue-element-admin</h2><blockquote>
<p>vue-element-admin</p>
</blockquote>
<p><a href="https://panjiachen.github.io/vue-element-admin-site/zh/guide/" title="vue-element-admin">vue-element-admin</a></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue3 新增的知识</title>
    <url>/2013/07/13/Vue3%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    <content><![CDATA[<h1 id="Vue3-新增的知识"><a href="#Vue3-新增的知识" class="headerlink" title="Vue3 新增的知识"></a>Vue3 新增的知识</h1><h2 id="Composition-API"><a href="#Composition-API" class="headerlink" title="Composition API"></a>Composition API</h2><p>Vue3 引入了 Composition API，它是一种新的编写 Vue 组件的方式。Composition API 允许你使用函数来组织组件的逻辑，而不是将所有的逻辑都放在一个大的选项对象中。</p>
<p>使用 Composition API 的好处是：</p>
<ul>
<li>更灵活的组织组件的逻辑，可以更好地拆分和复用代码。</li>
<li>更易于测试和调试，因为每个函数都可以被单独测试和调试。</li>
<li>更易于维护和扩展，因为每个函数都有清晰的边界，可以更容易地理解和修改。</li>
</ul>
<h2 id="Teleport"><a href="#Teleport" class="headerlink" title="Teleport"></a>Teleport</h2><p>Vue3 引入了 Teleport 组件，它允许你将一个组件的模板渲染到指定的目标元素中。</p>
<p>使用 Teleport 的好处是：</p>
<ul>
<li>可以将组件的模板渲染到指定的目标元素中，而不是默认的父元素中。</li>
<li>可以将组件的模板渲染到指定的目标元素中，而不是默认的父元素中。</li>
<li>可以将组件的模板渲染到指定的目标元素中，而不是默认的父元素中。</li>
</ul>
<h2 id="Fragment"><a href="#Fragment" class="headerlink" title="Fragment"></a>Fragment</h2><p>Vue3 引入了 Fragment 组件，它允许你将多个子节点封装到一个父节点中，而不是将所有子节点都渲染到同一个父节点中。</p>
<p>使用 Fragment 的好处是：</p>
<ul>
<li>可以将多个子节点封装到一个父节点中，而不是将所有子节点都渲染到同一个父节点中。</li>
<li>可以将多个子节点封装到一个父节点中，而不是将所有子节点都渲染到同一个父节点中。</li>
<li>可以将多个子节点封装到一个父节点中，而不是将所有子节点都渲染到同一个父节点中。</li>
</ul>
<h2 id="Suspense"><a href="#Suspense" class="headerlink" title="Suspense"></a>Suspense</h2><p>Vue3 引入了 Suspense 组件，它允许你定义组件的加载状态，并在加载状态时显示一个占位符。</p>
<p>使用 Suspense 的好处是：    </p>
<ul>
<li>可以在加载状态时显示一个占位符，提高用户体验。</li>
<li>可以在加载状态时显示一个占位符，提高用户体验。</li>
<li>可以在加载状态时显示一个占位符，提高用户体验。</li>
</ul>
<h2 id="其他新增的知识"><a href="#其他新增的知识" class="headerlink" title="其他新增的知识"></a>其他新增的知识</h2><ul>
<li>响应式系统（Reactivity System）</li>
<li>生命周期钩子（Lifecycle Hooks）</li>
<li>组件选项（Component Options）</li>
<li>模板语法（Template Syntax）</li>
<li>渲染函数（Render Functions）</li>
<li>工具函数（Utilities）</li>
<li>……</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Vue3 引入了 Composition API、Teleport、Fragment、Suspense 等新特性，它们提高了 Vue 组件的可复用性和可维护性。同时，Vue3 还引入了响应式系统、生命周期钩子、组件选项、模板语法、渲染函数、工具函数等新特性，使 Vue 更加灵活和强大。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://v3.vuejs.org/">Vue3 文档</a></li>
<li><a href="https://blog.vuejs.org/">Vue3 官方博客</a></li>
<li><a href="https://forum.vuejs.org/">Vue3 官方论坛</a></li>
<li><a href="https://community.vuejs.org/">Vue3 官方社区</a></li>
<li><a href="https://github.com/vuejs/vue-next">Vue3 官方 GitHub 仓库</a></li>
</ul>
]]></content>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
</search>
